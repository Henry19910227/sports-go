syntax = "proto3";

package galaxy.client.proto;

// ===================================================================================================================
// ================================================== 视频流列表开始 ==================================================
// 视频流信息
message MatchLiveStream {
  string name = 1;          // 线路名称 预留字段，可能不存在
  string url_source = 2;    // 信号源 预留字段，可能不存在
  string stream_type = 3;   // 流类型 预留字段，可能不存在 SD,ZH_SD,EN_SD,HD,ZH_HD,EN_HD
  string rtmp_url = 4;      // RTMP 格式播放地址，可能不存在
  string m3u8_url = 5;      // M3U8 格式播放地址，可能不存在
  string flv_url = 6;       // FLV 格式播放地址
  string language = 7;      // 语言代码 预留字段，可能不存在
}
// ================================================== 视频流列表结束 ==================================================
// ===================================================================================================================

// ===================================================================================================================
// ================================================== 比赛趋势开始 ==================================================
// 比赛趋势返回的结果结构
message MatchTrendData {
  // data 列表 [["上半场，趋势变化数据 - int"],["下半场，趋势变化数据 - int"]]
  repeated Data data = 1;

  // 半场数
  int32 count = 2;

  // 事件列表
  repeated Incidents incidents = 3;

  // 半场时长
  int32 per = 4;

  // 定义 Data 类型，表示 int 的嵌套列表
  message Data {
    repeated int32 values = 1;
  }

  // Incidents 内部类
  message Incidents {
    // 时间(分钟)
    string time = 1;

    // 事件发生方，1-主队、2-客队
    int32 position = 2;

    // 类型，详见状态码->技术统计
    int32 type = 3;
  }                         // 半场时长
}

message TrendInfo {
  repeated int32 first_half = 1; //上半场
  repeated int32 second_half = 2; //下半场
}

// ================================================== 比赛趋势结束 ==================================================
// ===================================================================================================================


// ===================================================================================================================
// ================================================== 比赛统计数据开始 ==================================================

message MatchLiveData {
  /**
  score: 比分字段说明 example：[2783605,8,[1, 0, 0, 0, -1, 0, 0],[1, 0, 0, 0, -1, 0, 0],0,""]
    Array[6]
    0:"纳米比赛id - int"
    1:"比赛状态，详见状态码->比赛状态 - int"
    2:Array[7]
        0:"主队比分(常规时间) - int"
        1:"主队半场比分 - int"
        2:"主队红牌 - int"
        3:"主队黄牌 - int"
        4:"主队角球，-1表示没有角球数据 - int"
        5:"主队加时比分(120分钟，即包括常规时间比分)，加时赛才有 - int"
        6:"主队点球大战比分(不包含常规时间及加时赛比分)，点球大战才有 - int"
    3:Array[7]
        0:"客队比分(常规时间) - int"
        1:"客队半场比分 - int"
        2:"客队红牌 - int"
        3:"客队黄牌 - int"
        4:"客队角球，-1表示没有角球数据 - int"
        5:"客队加时比分(120分钟，即包括常规时间比分)，加时赛才有 - int"
        6:"客队点球大战比分(不包含常规时间及加时赛比分)，点球大战才有 - int"
    4:"开球时间戳，上/下半场开球时间(根据比赛状态判断) - int"
    5:"备注信息，可忽略 - string"
   */
  //  repeated google.protobuf.Value score = 1;
  ScoreData score = 1;
  repeated Stat stats = 2;            // 比赛统计字段说明，可能不存在
  repeated TLive tlive = 3;           // 文字直播字段说明，可能不存在
  repeated Incident incidents = 4;    // 比赛事件字段说明，可能不存在
  map<string, IntArray> teamStats = 5;  //比赛球队半全场统计数据
  int32 id = 6;                       // 比赛Id
}
//比分信息
message ScoreData {
  int32 match_id = 1;
  int32 state = 2;
  /**
  Array[7]
        0:"主队比分(常规时间) - int"
        1:"主队半场比分 - int"
        2:"主队红牌 - int"
        3:"主队黄牌 - int"
        4:"主队角球，-1表示没有角球数据 - int"
        5:"主队加时比分(120分钟，即包括常规时间比分)，加时赛才有 - int"
        6:"主队点球大战比分(不包含常规时间及加时赛比分)，点球大战才有 - int"
   */
  repeated int32 home_scores = 3;
  /**
  Array[7]
        0:"客队比分(常规时间) - int"
        1:"客队半场比分 - int"
        2:"客队红牌 - int"
        3:"客队黄牌 - int"
        4:"客队角球，-1表示没有角球数据 - int"
        5:"客队加时比分(120分钟，即包括常规时间比分)，加时赛才有 - int"
        6:"客队点球大战比分(不包含常规时间及加时赛比分)，点球大战才有 - int"
   */
  repeated int32 away_scores = 4;
  int64 start_time = 5;
  string remark = 6;
}
//统计信息
message Stat {
  int32 away = 1; // 客队值
  int32 type = 2; // 类型，详见状态码->技术统计
  int32 home = 3; // 主队值
}
message IntArray {
  repeated int32 values = 1; // 0：主队数值 - int/float 1：客队数值 - int/float
}
//文字直播
message TLive {
  string data = 1;      // 事件内容
  int32 main = 2;       // 是否重要事件，1-是、0-否
  int32 position = 3;   // 事件发生方，0-中立、1-主队、2-客队
  string time = 4;      // 事件时间(分钟)
  int32 type = 5;       // 类型，详见状态码->技术统计
}
// 比赛事件
message Incident {
  int32 position = 1;           // 事件发生方，0-中立、1-主队、2-客队
  int32 time = 2;               // 事件时间(分钟)
  int32 type = 3;               // 类型，详见状态码->技术统计
  int32 second = 4;             // 时间
  int32 in_player_id = 5;       // 换上球员Id，可能不存在
  string in_player_name_zh = 6; // 换上球员名称(中文简体)，可能不存在
  string in_player_name_zht = 7;// 换上球员名称(中文繁体)，可能不存在
  string in_player_name_en = 8; // 换上球员名称(英文)，可能不存在
  int32 out_player_id = 9;      // 换下球员Id，可能不存在
  string out_player_name_zh = 10;   // 换下球员名称(中文简体)，可能不存在
  string out_player_name_zht = 11;  // 换下球员名称(中文繁体)，可能不存在
  string out_player_name_en = 12;   // 换下球员名称(英文)，可能不存在
  int32 reason_type = 13;        // 红黄牌、换人事件原因，详见状态码->事件原因（红黄牌、换人事件存在）
  int32 player_id = 14;         // 事件相关球员id，可能不存在
  string player_name_zh = 15;      // 事件相关球员名称(中文简体)，可能不存在
  string player_name_zht = 16;     // 事件相关球员名称(中文繁体)，可能不存在
  string player_name_en = 17;      // 事件相关球员名称(英文)，可能不存在
  int32 var_reason = 18;        // VAR原因（VAR事件存在）1-进球判定,2-进球未判定,3-点球判定,4-点球未判定,5-红牌判定,6-出牌处罚判定,7-错认身份,0-其他
  int32 var_result = 19;        // VAR结果（VAR事件存在）1-进球有效,2-进球无效,3-点球有效,4-点球取消,5-红牌有效,6-红牌取消,7-出牌处罚核实,8-出牌处罚更改,9-维持原判,10-判罚更改,0-未知
  int32 home_score = 20;        // 主队比分（进球、未进球 事件存在）
  int32 away_score = 21;        // 客队比分（进球、未进球 事件存在）
  int32 assist1_id = 22;        // 助攻球员一Id，可能不存在
  string assist1_name_zh = 23;     // 助攻球员一名称(中文简体)，可能不存在
  string assist1_name_zht = 24;    // 助攻球员一名称(中文繁体)，可能不存在
  string assist1_name_en = 25;     // 助攻球员一名称(英文)，可能不存在
  int32 assist2_id = 26;        // 助攻球员二Id，可能不存在
  string assist2_name_zh = 27;     // 助攻球员二名称(中文简体)，可能不存在
  string assist2_name_zht = 28;    // 助攻球员二名称(中文繁体)，可能不存在
  string assist2_name_en = 29;     // 助攻球员二名称(英文)，可能不存在

}
// ================================================== 比赛统计数据结束 ==================================================
// ===================================================================================================================


// =============================================================================================================
// ================================================== 阵容开始 ==================================================
// 事件信息
message PlayerIncident {
  int32 type = 1;            // 事件类型（参考技术类型）
  string time = 2;           // 事件发生时间（含加时时间，如 'A+B'）
  int32 belong = 3;          // 发生方，0-中立、1-主队、2-客队
  int32 home_score = 4;      // 主队比分
  int32 away_score = 5;      // 客队比分
  PlayerInfo player = 6;     // 球员信息
  PlayerInfo assist1 = 7;     // 助攻球员1
  PlayerInfo assist2 = 8;     // 助攻球员2
  PlayerInfo in_player = 9;     // 换上球员
  PlayerInfo out_player = 10;     // 换下球员
  int32 reason_type = 11;     // 红黄牌、换人事件原因
}

// 事件中涉及的球员
message PlayerInfo {
  int32 id = 1;          // 球员id
  string name = 2;       // 中文名称
}

// 球员信息
message Player {
  int32 id = 1;              // 球员id
  int32 team_id = 2;         // 球队id
  int32 first = 3;           // 是否首发，1-是、0-否
  int32 captain = 4;         // 是否队长，1-是、0-否
  string name = 5;           // 球员名称
  string logo = 6;           // 球员logo
  string national_logo = 7;  // 球员logo(国家队)
  int32 shirt_number = 8;    // 球衣号
  string position = 9;       // 球员位置，F前锋、M中场、D后卫、G守门员
  int32 x = 10;              // 阵容x坐标，总共100
  int32 y = 11;              // 阵容y坐标，总共100
  string rating = 12;        // 评分，10为满分
  repeated PlayerIncident incidents = 13; // 球员事件列表
}

// 比赛阵容实时数据
message MatchLineupDetail {
  int32 confirmed = 1;             // 正式阵容，1-是、0-否
  string home_formation = 2;       // 主队阵型
  string away_formation = 3;       // 客队阵型
  string home_color = 4;           // 主队球衣颜色
  string away_color = 5;           // 客队球衣颜色
  repeated Player home = 6;        // 主队阵型球员列表
  repeated Player away = 7;        // 客队阵型球员列表
  int32 home_id = 8;           // 主队Id
  string home_logo = 9;           // 主队logo
  int32 away_id = 10;           // 客队Id
  string away_logo = 11;           // 客队logo
}

// ================================================== 阵容结束 ==================================================
// =============================================================================================================



// ==================================================================================================================
// ================================================== 赛季积分榜开始 ==================================================

// 球队积分项
message TeamStats {
  int32 team_id = 1;             // 球队id
  int32 points = 2;              // 积分
  int32 total = 3;               // 比赛场次
  int32 won = 4;                 // 胜的场次
  int32 draw = 5;                // 平的场次
  int32 loss = 6;               // 负的场次
  int32 goals = 7;              // 进球
  int32 goals_against = 8;      // 失球
  string team_name = 9;          // 球队名称
  string team_logo = 10;          // 球队logo
}
// 积分榜信息
message Table {
  int32 id = 1;                  // 积分榜表id
  string conference = 2;         // 分区信息（极少部分赛事才有，比如美职联）
  int32 group = 3;               // 不为0表示分组赛的第几组，1-A、2-B以此类推
  int32 stage_id = 4;            // 所属阶段id
  repeated TeamStats rows = 5;   // 球队积分项
}

// 包含多个积分榜
message CompetitionTables {
  repeated Table tables = 1;          // 积分榜列表
}

// ================================================== 赛季积分榜结束 ==================================================
// ==================================================================================================================
